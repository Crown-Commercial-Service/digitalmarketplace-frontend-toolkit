////
/// @group helpers
////

/// Grid width percentage
///
/// @param {String} $key - Name of grid width (e.g. two-thirds)
/// @return {Number} Percentage width
/// @throw if `$key` is not a valid grid width
/// @access public

@function govuk-grid-width($key) {
  @if map-has-key($govuk-grid-widths, $key) {
    @return map-get($govuk-grid-widths, $key);
  }

  @error "Unknown grid width `#{$key}`";
}

/// Grid width percentage (alias)
///
/// @alias govuk-grid-width
/// @deprecated To be removed in v3.0, replaced by govuk-grid-width
@function grid-width($key) {
  @return govuk-grid-width($key);
}

/// Generate grid row styles
///
/// Creates a grid row class with a standardised margin.
///
/// @param {String} $class [govuk-grid-row] CSS class name
///
/// @example scss - Default
///   @include govuk-grid-row;
///
/// @example scss - Customising the class name
///   @include govuk-grid-row("app-grid");
///
/// @access public
/// @deprecated To be removed in v3.0, replaced by the govuk-grid-row class

@mixin govuk-grid-row($class: "govuk-grid-row") {
  .#{$class} {
    @include govuk-clearfix;
    margin-right: - ($govuk-gutter-half);
    margin-left: - ($govuk-gutter-half);
  }
}

/// Generate grid column styles
///
/// Creates a grid column with standard gutter between the columns.
///
/// If a `$class` is provided (which is the default, but deprecated behaviour),
/// the generated rules will be wrapped in a predefined selector in the format
/// `$class-$width` (e.g. `govuk-grid-column-full`). This behaviour is
/// deprecated and will be removed in v3.0
///
/// Grid widths are defined in the `$govuk-grid-widths` map.
///
/// By default the column width changes from 100% to specified width at the
/// 'tablet' breakpoint, but other breakpoints can be specified using the `$at`
/// parameter.
///
/// @param {String} $width [full] name of a grid width from $govuk-grid-widths
/// @param {String} $float [left] left | right
/// @param {String} $at [tablet] - mobile | tablet | desktop | any custom breakpoint
/// @param {String} $class [govuk-grid-column] CSS class name (deprecated)
///
/// @example scss - Default
///   .govuk-grid-column-two-thirds {
///     @include govuk-grid-column(two-thirds, $class: false)
///   }
///
/// @example scss - Customising the breakpoint where width percentage is applied
///   .govuk-grid-column-one-half-at-desktop {
///     @include govuk-grid-column(one-half, $at: desktop);
///   }
///
/// @example scss - Customising the float direction
///   .govuk-grid-column-one-half-right {
///     @include govuk-grid-column(two-thirds, $float: right, $class: false);
///   }
///
/// @example scss - Customising the class name (deprecated)
///   @include govuk-grid-column(one-half, $class: "test-column");
///
/// @access public

@mixin govuk-grid-column($width: full, $float: left, $at: tablet, $class: "govuk-grid-column") {
  @if ($class) {
    .#{$class}-#{$width} {
      @include govuk-grid-column($width, $float, $at, $class: false);
    }
  } @else {
    box-sizing: border-box;
    @if $at != desktop {
      width: 100%;
    }
    padding: 0 $govuk-gutter-half;
    @include govuk-media-query($from: $at) {
      width: govuk-grid-width($width);
      float: $float;
    }
  }
}
